;   _._ ›; o|- -|o This file is licensed under CC4-BY-NC-SA international license.›;  ( l )  To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/›;    =    Author: Jean-Marc "jihem" QUERE 2016 - jean-marc.quere@codyssea.com››CARD SAVMSC=$58›BYTE ARRAY COLORS(4)=$2C4››PROC GF7_=*()› [; XPC (+0)›  0›  ; XPX (+1)›  0 0›  ; XPY (+3)›  0 0›  ; BM  (+5)›  $C0 $30 $0C $03›  ; CM  (+9) ›  $00 $55 $AA $FF›  ; SCRADR (+13)›  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0›  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0›  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0›  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0›  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0›  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0›  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0›  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0›  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0›  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0›  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0›  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0› ]››PROC GF7()› BYTE i› CARD ARRAY scradr› › GRAPHICS(7);23› COLORS(0)=40› COLORS(1)=202 › COLORS(2)=148› COLORS(3)=70     ›        › scradr=GF7_+13› scradr(0)=SAVMSC› i=0› WHILE i<95› DO›  i==+1     ›  scradr(i)=scradr(i-1)+40› OD ›RETURN››PROC WPlot=*(INT X,Y,BYTE CLR)› [›              ; Store args›  $8D GF7_+1  ;     STA XPX›  $8E GF7_+2  ;     STX XPX+1›  $8C GF7_+3  ;     STY XPY›  $A5 $A3     ;     LDA $A3›  $8D GF7_+4  ;     STA XPY+1›  $A6 $A4     ;     LDX $A4›       ›              ; Test XPX, XPY limits››  $AD GF7_+2  ;     LDA XPX+1›  $18         ;     CLC›  $6D GF7_+4  ;     ADC XPY+1›  $C9 $00     ;     CMP #$00›  $D0 $43     ;     BNE <PC+$43>›  $AD GF7_+1  ;     LDA XPX›  $C9 $A0     ;     CMP #$A0›  $B0 $3C     ;     BCS <PC+$3C>›  $AD GF7_+3  ;     LDA XPY›  $C9 $50     ;     CMP #$50›  $B0 $35     ;     BCS <PC+$35>››              ; Compute color pattern›  $BD GF7_+9  ;     LDA CM,X›  $8D GF7_    ;     STA XPC         ››              ; Compute SCRADR Yindex›  $98         ;     TYA›  $18         ;     CLC›  $0A         ;     ASL›  $A8         ;     TAY  ››              ; Store SCRADR[Yindex]›  $B9 GF7_+13 ;     LDA SCRADR,Y›  $85 $F0     ;     STA $F0    ››              ; Store SCRADR[Yindex]+1›  $C8         ;     INY›  $B9 GF7_+13 ;     LDA SCRADR,Y›  $85 $F1     ;     STA $F1    ››              ; Compute X offset  ›  $AD GF7_+1  ;     LDA XPX›  $4A         ;     LSR      ›  $4A         ;     LSR›  $A8         ;     TAY›          ›              ; Upd. pixel SCRADR[Y][X]›  $AD GF7_+1  ;     LDA XPX›  $29 $03     ;     AND #$03›  $AA         ;     TAX›  $BD GF7_+5  ;     LDA BM,X››              ; Apply mask on pattern›  $AA         ;     TAX›  $2D GF7_    ;     AND XPC›  $8D GF7_    ;     STA XPC›  $8A         ;     TXA››              ; Inverse mask›  $49 $FF     ;     EOR #$FF (not)››              ; & SCRADR[Y][X] % XPC›  $31 $F0     ;     AND ($F0),Y›  $0D GF7_    ;     ORA XPC ›  $91 $F0     ;     STA ($F0),Y    ›               ›  $60         ;     RTS› ]››PROC CLS()› Zero(SAVMSC,$0C80)  ›RETURN››PROC WCircle(INT x,y,r,BYTE c)› BYTE cx,cy› INT d› cx=r› cy=0   › d=-r+1› DO›  WPlot(x+cx,y+cy,c)›  WPlot(x-cx,y+cy,c)›  WPlot(x+cx,y-cy,c)›  WPlot(x-cx,y-cy,c)›  WPlot(x+cy,y+cx,c)›  WPlot(x-cy,y+cx,c)›  WPlot(x+cy,y-cx,c)›  WPlot(x-cy,y-cx,c)›  cy==+1     ›  IF d<0 THEN›   d==+2*cy+1›  ELSE›   cx==-1›   d==-2*(cx-cy)+1›  FI      › UNTIL cx<cy› OD›RETURN››PROC WLine(INT x0,y0,x1,y1,BYTE c)› INT dx,dy,ii,ix,iy,jx,jy,mi,mn,mx›› dx=x1› dx==-x0› dy=y1› dy==-y0      › ix=sgn(dx)› iy=sgn(dy)› dx=abs(dx)+1› dy=abs(dy)+1› mx=max(dx,dy)› mn=min(dx,dy)› ii=mx› IF dx=ii THEN›  jx=ix›  ix=0› ELSE›  jx=0› FI› IF dy=ii THEN›  jy=iy›  iy=0› ELSE›  jy=0› FI› mi=0› WHILE ii>0› DO›  WPlot(x0,y0,c)›  x0==+jx›  y0==+jy›  mi==+mn›  IF mi>mx THEN›   mi==-mx›   x0==+ix›   y0==+iy›  FI›  II==-1› OD›RETURN››PROC Line_=*()› [; dx + 0›  0 0›  ; dy + 2›  0 0›  ; ii + 4›  0 0›  ; ix + 6›  0 0›  ; iy + 8›  0 0›  ; jx +10›  0 0›  ; jy +12›  0 0›  ; mi +14›  0 0›  ; mn +16›  0 0›  ; mx +18›  0 0› ]        ››PROC Line=*(INT x0,y0,x1,y1,BYTE c)› [    ›  $85 $F2     ;     STA $F2  X0L›  $86 $F3     ;     STX $F3  X0H›  $84 $F4     ;     STY $F4  Y0L›  $A5 $A3     ;     LDA $A3  ›  $85 $F5     ;     STA $F5  Y0H›              ; dx=x1-x0  ›  $38         ;     SEC›  $A5 $A4     ;     LDA $A4  X1L›  $E5 $F2     ;     SBC $F2›  $8D Line_   ;     STA Line_     ›  $A5 $A5     ;     LDA $A5  X1H›  $E5 $F3     ;     SBC $F3  ›  $8D Line_+1 ;     STA Line_+1›              ; dy=y1-y0›  $38         ;     SEC›  $A5 $A6     ;     LDA $A6  Y1L›  $E5 $F4     ;     SBC $F4›  $8D Line_+2 ;     STA Line_+2›  $A5 $A7     ;     LDA $A7  Y1H›  $E5 $A3     ;     SBC $A3  ›  $8D Line_+3 ;     STA Line_+3›              ; ix=sgn(dx)›  $AD Line_   ;     LDA Line_›  $AE Line_+1 ;     LDX Line_+1›  $20 sgn     ;     JSR sgn›  $A5 $A0     ;     LDA $A0›  $8D Line_+6 ;     STA Line_+6›  $A5 $A1     ;     LDA $A1    ›  $8D Line_+7 ;     STA Line_+7›              ; iy=sgn(dy)›  $AD Line_+2 ;     LDA Line_+2›  $AE Line_+3 ;     LDX Line_+3›  $20 sgn     ;     JSR sgn›  $A5 $A0     ;     LDA $A0›  $8D Line_+8 ;     STA Line_+8›  $A5 $A1     ;     LDA $A1    ›  $8D Line_+9 ;     STA Line_+9›              ; dx=abs(dx)+1›  $AD Line_   ;     LDA Line_›  $AE Line_+1 ;     LDX Line_+1›  $20 abs     ;     JSR abs›  $18         ;     CLC›  $A5 $A0     ;     LDA $A0›  $69 $01     ;     ADC #$01›  $8D Line_   ;     STA Line_›  $A5 $A1     ;     LDA $A1›  $69 $00     ;     ADC #$00›  $8D Line_+1 ;     STA Line_+1›              ; dy=abs(dy)+1›  $AD Line_+2 ;     LDA Line_+2›  $AE Line_+3 ;     LDX Line_+3›  $20 abs     ;     JSR abs›  $18         ;     CLC›  $A5 $A0     ;     LDA $A0›  $69 $01     ;     ADC #$01›  $8D Line_+2 ;     STA Line_+2›  $A5 $A1     ;     LDA $A1›  $69 $00     ;     ADC #$00›  $8D Line_+3 ;     STA Line_+3›              ; mx=max(dx,dy)›              ; ii=mx›  $85 $A3     ;     STA $A3›  $AD Line_   ;     LDA Line_›  $AE Line_+1 ;     LDX Line_+1›  $AC Line_+2 ;     LDY Line_+2›  $20 max     ;     JSR max›  $A5 $A0     ;     LDA $A0›  $8D Line_+18;     STA Line_+18›  $8D Line_+4 ;     STA Line_+4›  $A5 $A1     ;     LDA $A1     ›  $8D Line_+19;     STA Line_+19›  $8D Line_+5 ;     STA Line_+5›              ; mn=min(dx,dy)›  $AD Line_+3 ;     LDA Line_+3›  $85 $A3     ;     STA $A3›  $AD Line_   ;     LDA Line_›  $AE Line_+1 ;     LDX Line_+1›  $AC Line_+2 ;     LDY Line_+2›  $20 min     ;     JSR min›  $A5 $A0     ;     LDA $A0›  $8D Line_+16;     STA Line_+16›  $A5 $A1     ;     LDA $A1     ›  $8D Line_+17;     STA Line_+17›              ; if dx=ii then›  $AD Line_+5 ;     LDA Line_+5›  $CD Line_+1 ;     CMP Line_+1›  $D0 $1F     ;     BNE $1F <EL0>›  $AD Line_+4 ;     LDA Line_+4›  $CD Line_   ;     CMP Line_›  $D0 $17     ;     BNE $17 <EL0>›              ; jx=ix›  $AD Line_+6 ;     LDA Line_+6›  $8D Line_+10;     STA Line_+10›  $AD Line_+7 ;     LDA Line_+7›  $8D Line_+11;     STA Line_+11›              ; ix=0›  $A9 $00     ;     LDA #$00›  $8D Line_+6 ;     STA Line_+6›  $8D Line_+7 ;     STA Line_+7›  $4C Line+230;     JMP <FI0>›              ; else›              ; jx=0›  $A9 $00     ; EL0 LDA #$00›  $8D Line_+10;     STA Line_+10›  $8D Line_+11;     STA Line_+11›              ; fi›              ; if dy=ii then›  $AD Line_+5 ; FI0 LDA Line_+5›  $CD Line_+3 ;     CMP Line_+3›  $D0 $1F     ;     BNE $1F <EL1>›  $A5 Line_+4 ;     LDA Line_+4›  $CD Line_+2 ;     CMP Line_+2›  $D0 $17     ;     BNE $17 <EL1>›              ; jy=iy›  $AD Line_+8 ;     LDA Line_+8›  $8D Line_+12;     STA Line_+12›  $AD Line_+9 ;     LDA Line_+9›  $8D Line_+13;     STA Line_+13›              ; iy=0›  $A9 $00     ;     LDA #$00›  $8D Line_+8 ;     STA Line_+8›  $8D Line_+9 ;     STA Line_+9›  $4C Line+277;     JMP <FI1>›              ; else›              ; jy=0›  $A9 $00     ; EL1 LDA #$00›  $8D Line_+12;     STA Line_+12›  $8D Line_+13;     STA Line_+13›              ; fi  ›              ; mi=0›  $8D Line_+14; FI1 STA Line_+14›  $8D Line_+15;     STA Line_+15›              ; while ii>0›  $AD Line_+5 ; WH0 LDA Line_+5›  $C9 $80     ;     CMP #$80›  $90 $01     ;     BCC <CNT>›  $60         ; END RTS›  $C9 $00     ; CNT CMP #$00›  $D0 $07     ;     BNE <DO0>›  $AD Line_+4 ;     LDA Line_+4›  $C9 $00     ;     CMP #$00›  $F0 $F4     ;     BEQ <END> ›              ; wplot(x0,y0,c)›  $A5 $A8›  $85 $A4     ;     STA $A4›  $A5 $F5     ;     LDA $F5›  $85 $A3     ;     STA $A3›  $A4 $F4     ;     LDY $F4›  $A6 $F3     ;     LDX $F3›  $A5 $F2     ;     LDA $F2     ›  $20 WPlot   ;     JSR WPlot›              ; x0==+jx›  $18         ;     CLC ›  $A5 $F2     ;     LDA $F2›  $6D Line_+10;     ADC Line_+10›  $85 $F2     ;     STA $F2›  $A5 $F3     ;     LDA $F3›  $6D Line_+11;     ADC Line_+11›  $85 $F3     ;     STA $F3›              ; y0==+jy›  $18         ;     CLC›  $A5 $F4     ;     LDA $F4›  $6D Line_+12;     ADC Line_+12›  $85 $F4     ;     STA $F4›  $A5 $F5     ;     LDA $F5›  $6D Line_+13;     ADC Line_+13›  $85 $F5     ;     STA $F5›              ; mi==+mn›  $18         ;     CLC›  $AD Line_+14;     LDA Line_+14›  $6D Line_+16;     ADC Line_+16›  $8D Line_+14;     STA Line_+14›  $AD Line_+15;     LDA Line_+15›  $6D Line_+17;     ADC Line_+17›  $8D Line_+15;     STA Line_+15›  ›          ; if mi>mx then›  $CD Line_+19;     CMP Line_+19›  ;$4C Line+448›  $F0 $05     ;     BEQ <ML1> ›  $B0 $10     ;     BCS <IF2>›  $4C Line+448;     JMP <FI2> ›  $AD Line_+14; ML1 LDA Line_+14›  $CD Line_+18;     CMP Line_+18›  $F0 $02     ;     BEQ <ML2> ›  $B0 $03     ;     BCS <IF2>›  $4C Line+448; ML2 JMP <FI2>›              ; mi==-mx›  $38         ; IF2 SEC›  $AD Line_+14;     LDA Line_+14›  $ED Line_+18;     SBC Line_+18›  $8D Line_+14;     STA Line_+14›  $AD Line_+15;     LDA Line_+15›  $ED Line_+19;     SBC Line_+19›  $8D Line_+15;     STA Line_+15 ›              ; x0==+ix     ›  $18         ;     CLC  ›  $AD Line_   ;     LDA Line_›  $6D Line_+6 ;     ADC Line_+6›  $8D Line_   ;     STA Line_›  $AD Line_   ;     LDA Line_+1›  $6D Line_+7 ;     ADC Line_+7›  $8D Line_   ;     STA Line_+1›              ; y0==+iy     ›  $18         ;     CLC ›  $AD Line_+2 ;     LDA Line_+2›  $6D Line_+8 ;     ADC Line_+8›  $8D Line_+2 ;     STA Line_+2›  $AD Line_+3 ;     LDA Line_+3›  $6D Line_+9 ;     ADC Line_+9›  $8D Line_+3 ;     STA Line_+3›              ; ii==-1›  $38         ; FI2 SEC›  $AD Line_+4 ;     LDA Line_+4›  $E9 $01     ;     SBC #$01›  $8D Line_+4 ;     STA Line_+4 ›  $AD Line_+5 ;     LDA Line_+5›  $E9 $00     ;     SBC $#00›  $8D Line_+5 ;     STA Line_+5›  $4C Line+283;     JMP WH0› ]›››MODULE›